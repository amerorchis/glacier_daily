name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: |
          uv sync --extra dev

      - name: Run pre-commit hooks
        run: |
          echo "Running code quality checks..."
          uv run pre-commit run --all-files --show-diff-on-failure --verbose

  unit-and-integration-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (Unix)
        if: runner.os != 'Windows'
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        run: irm https://astral.sh/uv/install.ps1 | iex

      - name: Install dependencies
        run: |
          uv sync --extra dev

      - name: Create directory (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p email_images/today/

      - name: Create directory (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path email_images/today/

      - name: Set python path (Unix)
        if: runner.os != 'Windows'
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd)

      - name: Set python path (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $env:PYTHONPATH += ";$(Get-Location)"

      - name: Run tests
        run: |
          echo "Running test suite with coverage on ${{ matrix.os }}..."
          uv run pytest test/ --cov=. --cov-report xml --tb=short

      - name: Upload results to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: amerorchis/glacier_daily
